apply plugin: 'java'
apply plugin: 'jetty'

repositories {
    mavenCentral()
    dependencies { 'org.ajoberstar:gradle-plugins:0.1.1' }
}

dependencies {
    compile 'org.eclipse.jetty:jetty-server:9.2.1.v20140609'
    compile 'commons-io:commons-io:2.4'
    compile 'commons-fileupload:commons-fileupload:1.3'
    compile 'com.coverity.security:coverity-escapers:1.1.1'
    compile 'org.tmatesoft.sqljet:sqljet:1.1.6'
    compile 'org.xerial:sqlite-jdbc:3.7.2'
    testCompile 'junit:junit:4.4'
    testCompile 'net.sourceforge.jwebunit:jwebunit-htmlunit-plugin:3.2'
}

task(createDB, dependsOn:classes, type: JavaExec) {
    description = 'Creates the database needed for the web application.'
    main = 'swsec.dbsetup.DBSetup'
    classpath = sourceSets.main.runtimeClasspath
}

[jettyRun,jettyRunWar,jettyStop]*.stopPort = 8081
[jettyRun,jettyRunWar,jettyStop]*.stopKey = 'stopKey'

jettyRun {
    contextPath ''
    scanIntervalSeconds = 2
    doFirst {
        assert file('src/main/webapp/WEB-INF/swsecdemo.sqlite').exists() 
    }
}

test {
    exclude '**/*ITest.*'
}

task integrationTest(type: Test, dependsOn:test) {
    description = 'Tests the web application and database.'
    include '**/*ITest.*'
    doFirst {
        createDB.execute()
        jettyRun.daemon = true
        jettyRun.execute()
    }
    doLast {
        jettyStop.execute()
    }
}

task install(dependsOn:integrationTest)